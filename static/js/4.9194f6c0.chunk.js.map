{"version":3,"sources":["utils/mapbox-utils.ts","features/activities/ActivityOverview.tsx"],"names":["initializeMap","container","accessToken","process","REACT_APP_MAPBOX_ACCESS_TOKEN","Error","mapboxgl","Map","style","ActivityOverview","activityId","match","params","id","useState","activity","setActivity","mapContainerRef","useRef","mapRef","useEffect","a","strava","current","on","map","target","setCenter","setZoom","addSource","type","data","properties","geometry","toGeoJSON","polyline","addLayer","source","layout","paint","console","log","name","href","Math","round","distance","ref","minHeight"],"mappings":"qHAAA,uDAEaA,EAAgB,SAACC,GAG5B,IAAMC,EAAcC,iJAAYC,8BAEhC,IAAKF,EACH,MAAM,IAAIG,MAAM,qCAGlB,OAAO,IAAIC,IAASC,IAAI,CACtBL,cACAD,YACAO,MAAO,yC,uHC2EIC,UA7EU,SAAC,GAAoC,IACtDC,EADqD,EAAjCC,MACDC,OAAOC,GAD2B,EAE3BC,qBAF2B,mBAEpDC,EAFoD,KAE1CC,EAF0C,KAIrDC,EAAkBC,iBAAuB,MACzCC,EAASD,mBA2Cf,OAzCAE,qBAAU,WACP,sBAAC,sBAAAC,EAAA,kEACAL,EADA,SACkBM,IAAuBZ,GADzC,4EAAD,KAGA,CAACA,IAEJU,qBAAU,WACJL,IACGI,EAAOI,UACVJ,EAAOI,QAAUvB,YAAciB,EAAgBM,UAGjDJ,EAAOI,QAAQC,GAAG,QAAQ,YAAsB,IAAXC,EAAU,EAAlBC,OAC3BD,EAAIE,UAAU,EAAE,MAAO,QAAQC,QAAQ,IAEvCH,EAAII,UAAU,cAAe,CAC3BC,KAAM,UACNC,KAAM,CACJD,KAAM,UACNE,WAAY,GACZC,SAAUC,oBAAUnB,EAASU,IAAIU,aAIrCV,EAAIW,SAAS,CACXvB,GAAI,YACJiB,KAAM,OACNO,OAAQ,cACRC,OAAQ,CACN,YAAa,QACb,WAAY,SAEdC,MAAO,CACL,aAAc,OACd,aAAc,WAKrB,CAACxB,IAECA,GAILyB,QAAQC,IAAI,YAAa1B,GAGvB,gCACE,6BAAKA,EAAS2B,OACd,mBAAGC,KAAI,4CAAuC5B,EAASF,IAAvD,2BAGA,gCACE,kCACE,+BACE,2CACA,+BAAK+B,KAAKC,MAAM9B,EAAS+B,SAAW,KAApC,YAEF,6BACE,8BAIN,qBAAKC,IAAK9B,EAAiBT,MAAO,CAAEwC,UAAW,eAtB1C","file":"static/js/4.9194f6c0.chunk.js","sourcesContent":["import mapboxgl from 'mapbox-gl'\n\nexport const initializeMap = (container: HTMLElement) => {\n  // TODO: Allow overriding this token from in-app settings, similar to Strava API.\n  // TODO: On github, use a \"public\" token that only allows github pages domain.\n  const accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\n\n  if (!accessToken) {\n    throw new Error('No mapbox access token available.')\n  }\n\n  return new mapboxgl.Map({\n    accessToken,\n    container,\n    style: 'mapbox://styles/mapbox/streets-v11',\n    //center: [-73.55, 45.54],\n    //zoom: 12,\n  })\n}\n","import { toGeoJSON } from '@mapbox/polyline'\nimport mapboxgl from 'mapbox-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport { useEffect, useRef, useState } from 'react'\nimport { RouteComponentProps } from 'react-router'\nimport { initializeMap } from '../../utils/mapbox-utils'\n\nimport * as strava from '../strava-integration/strava-api'\n\ntype ActivitiesListProps = RouteComponentProps<{ id: string }>\n\nconst ActivityOverview = ({ match }: ActivitiesListProps) => {\n  const activityId = match.params.id\n  const [activity, setActivity] = useState<any>()\n\n  const mapContainerRef = useRef<HTMLDivElement>(null)\n  const mapRef = useRef<mapboxgl.Map>()\n\n  useEffect(() => {\n    ;(async () => {\n      setActivity(await strava.getActivityById(activityId))\n    })()\n  }, [activityId])\n\n  useEffect(() => {\n    if (activity) {\n      if (!mapRef.current) {\n        mapRef.current = initializeMap(mapContainerRef.current!)\n      }\n\n      mapRef.current.on('load', ({ target: map }) => {\n        map.setCenter([-73.55, 45.54]).setZoom(12)\n\n        map.addSource('test-line-1', {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            properties: {},\n            geometry: toGeoJSON(activity.map.polyline),\n          },\n        })\n\n        map.addLayer({\n          id: 'test-line',\n          type: 'line',\n          source: 'test-line-1',\n          layout: {\n            'line-join': 'round',\n            'line-cap': 'round',\n          },\n          paint: {\n            'line-color': '#e11',\n            'line-width': 5,\n          },\n        })\n      })\n    }\n  }, [activity])\n\n  if (!activity) {\n    return <p>loading...</p>\n  }\n\n  console.log('activity:', activity)\n\n  return (\n    <div>\n      <h2>{activity.name}</h2>\n      <a href={`https://www.strava.com/activities/${activity.id}`}>\n        See on Strava\n      </a>\n      <table>\n        <tbody>\n          <tr>\n            <td>Distance:</td>\n            <td>{Math.round(activity.distance / 1000)} km</td>\n          </tr>\n          <tr>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n      <div ref={mapContainerRef} style={{ minHeight: '600px' }} />\n    </div>\n  )\n}\n\n// default export for React.lazy()\nexport default ActivityOverview\n"],"sourceRoot":""}