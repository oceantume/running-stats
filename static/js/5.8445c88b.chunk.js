(this["webpackJsonprunning-stats"]=this["webpackJsonprunning-stats"]||[]).push([[5],{36:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var s=n(39),a=n.n(s);const r=t=>{const e="pk.eyJ1Ijoib2NlYW50dW1lIiwiYSI6ImNrb3JtcGJldTAwbjIyd25wb3NzMnVzaGUifQ._04Bz2j9Ot3v6zIxNk1gJw";return new a.a.Map({accessToken:e,container:t,style:"mapbox://styles/mapbox/streets-v11"})}},42:function(t,e,n){"use strict";n.r(e);var s=n(1),a=n(17),r=(n(37),n(38)),c=n(36),i=n(0);const o=()=>{const t=Object(s.useRef)(null),e=Object(s.useRef)(),[n,o]=Object(s.useState)();return Object(s.useEffect)((()=>{(async()=>{const t=[];for(let e=1,n=-1;0!==n;e++){const s=await a.b(e);n=s.length;const c=s.filter((({map:t})=>null===t||void 0===t?void 0:t.summary_polyline));Array.prototype.push.apply(t,c.flatMap((({map:t})=>Object(r.toGeoJSON)(t.summary_polyline).coordinates)))}o(t)})()}),[]),Object(s.useEffect)((()=>{n&&(e.current||(e.current=Object(c.a)(t.current)),e.current.on("load",(({target:t})=>{t.setCenter([-73.55,45.54]).setZoom(12),t.addSource("heatpoints",{type:"geojson",data:{type:"Feature",properties:{},geometry:{type:"MultiPoint",coordinates:n}}}),t.addLayer({id:"my-heat",type:"heatmap",source:"heatpoints",paint:{"heatmap-radius":6,"heatmap-weight":{type:"identity",property:"point_count"}}})})))}),[n]),Object(i.jsx)("div",{ref:t,style:{minHeight:"600px",minWidth:"600px"}})};e.default=()=>Object(i.jsxs)("div",{children:[Object(i.jsx)("h2",{children:"Activity maps"}),Object(i.jsx)("div",{children:Object(i.jsxs)("label",{children:[Object(i.jsx)("input",{type:"radio",defaultChecked:!0}),"Heatmap"]})}),Object(i.jsx)(o,{})]})}}]);
//# sourceMappingURL=5.8445c88b.chunk.js.map